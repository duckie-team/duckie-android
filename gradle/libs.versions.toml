[versions]
# plugin - build
plugin-build-gradle-android = "8.0.0-alpha08"
plugin-build-google-service = "4.3.15"

# plugin - code
plugin-code-ktlint-core = "11.3.1"
# https://github.com/JLLeitschuh/ktlint-gradle/issues/589
# klint 최신 버전과 사용 불가
plugin-code-ktlint-source = "0.45.2"
plugin-code-detekt = "1.22.0"

# plugin - kotlin
plugin-kotlin-ksp = "1.8.10-1.0.9"

# plugin - compose
plugin-compose-paparazzi = "1.2.0"

# plugin - ui
plugin-ui-oss-license = "0.10.6"

# plugin - util
plugin-util-dependency-graph = "1.0.0"
plugin-util-dependency-handler-extensions = "1.0.3"
plugin-util-secrets = "2.0.1"

# plugin - local
plugin-local-master = "master"

# kotlin
kotlin-core = "1.8.10"
kotlin-dokka = "1.8.10"
kotlin-kover = "0.6.1"
kotlin-coroutines = "1.6.4"
kotlin-collections-immutable = "0.3.5"

# apache
apache-commons-io = "2.11.0"

# androidx
androidx-appcompat = "1.6.1" # needs for oss license activity
androidx-lifecycle-savedstate = "2.6.1"
androidx-splash = "1.0.1"
androidx-datastore = "1.0.0"
androidx-room = "2.5.1"
androidx-profile-installer = "1.2.2"
androidx-paging = "3.1.1"
androidx-paging-compose = "1.0.0-alpha18"
androidx-annotation = "1.6.0"

# compose
compose-core = "1.4.2"
compose-foundation = "1.4.0-beta01" # use alpha for HorizontalPager
compose-material = "1.4.2"
compose-runtime = "1.5.0-alpha03" # use alpha for SnapshotStateList#toList
compose-lifecycle = "2.6.1" # use alpha for StateFlow#collectAsStateWithLifecycle
compose-compiler = "1.4.3"
compose-activity = "1.7.1"
compose-accompanist = "0.30.1"
compose-lottie = "6.0.0"
compose-camposer = "0.1.1"
compose-customview-pooling-container = "1.0.0"
compose-coil = "2.3.0"

# ktx
ktx-core = "1.9.0"
ktx-activity = "1.7.1"
ktx-lifecycle = "2.6.1"

# ui
ui-oss-license = "17.0.0"
ui-system-controller = "1.0.1"

# exoplayer
exoplayer-core = "2.18.5"

# analytics
analytics-leakcanary = "2.10"
analytics-anrwatchdog = "1.4.0"

# firebase
firebase-bom = "31.5.0"
firebase-plugin-crashlytics = "2.9.5"
firebase-plugin-performance = "1.4.2"

# login
login-kakao = "2.13.0"

# di
di-hilt = "2.45"
di-inject = "1"

# ktor
ktor-core = "2.2.4"

# fuel
fuel-core = "2.3.1"

# jackson
jackson-core = "2.14.2"

# moshi
moshi-core = "1.14.0"

# orbit
orbit-core = "4.6.1"

# quack
quack-ui-components = "1.4.5"
quack-lint-core = "1.0.1"
quack-lint-quack = "1.0.1"
quack-lint-compose = "1.0.2"
# TODO(sungbin): quack-lint-writing

# test
test-strikt = "0.34.1"
test-junit-core = "4.13.2"
test-junit-engine = "5.9.2"
test-androidx-junit = "1.1.5"
test-androidx-runner = "1.5.2"
test-parameter-injector = "1.11"
test-turbine = "0.12.3"

[plugins]
gms-google-service = { id = "com.google.gms.google-services", version.ref = "plugin-build-google-service" }

ui-oss-license = { id = "com.google.android.gms.oss-licenses-plugin", version.ref = "plugin-ui-oss-license" }

firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebase-plugin-crashlytics" }
firebase-performance = { id = "com.google.firebase.firebase-perf", version.ref = "firebase-plugin-performance" }

code-ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "plugin-code-ktlint-core" }
code-detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "plugin-code-detekt" }

kotlin-ksp = { id = "com.google.devtools.ksp", version.ref = "plugin-kotlin-ksp" }
kotlin-dokka = { id = "org.jetbrains.dokka", version.ref = "kotlin-dokka" }
kotlin-kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kotlin-kover" }

compose-paparazzi = { id = "app.cash.paparazzi", version.ref = "plugin-compose-paparazzi" }

di-hilt = { id = "com.google.dagger.hilt.android", version.ref = "di-hilt" }

util-dependency-graph = { id = "land.sungbin.dependency.graph.plugin", version.ref = "plugin-util-dependency-graph" }
util-dependency-handler-extensions = { id = "land.sungbin.dependency.handler.extensions", version.ref = "plugin-util-dependency-handler-extensions" }
util-secrets = { id = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin", version.ref = "plugin-util-secrets" }

local-convention-enum = { id = "team.duckie.app.android.local.convention.enum", version.ref = "plugin-local-master" }
local-plugin-enum = { id = "team.duckie.app.android.local.plugin.enum", version.ref = "plugin-local-master" }

[libraries]
build-gradle-agp = { module = "com.android.tools.build:gradle", version.ref = "plugin-build-gradle-android" }
build-google-service = { module = "com.google.gms:google-services", version.ref = "plugin-build-google-service" }
build-ui-oss-license = { module = "com.google.android.gms:oss-licenses-plugin", version.ref = "plugin-ui-oss-license" }
build-di-hilt = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "di-hilt" }
build-firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics-gradle", version.ref = "firebase-plugin-crashlytics" }
build-firebase-performance = { module = "com.google.firebase:perf-plugin", version.ref = "firebase-plugin-performance" }
build-dependency-handler-extensions = { module = "land.sungbin.dependency.handler.extensions:dependency-handler-extensions-plugin", version.ref = "plugin-util-dependency-handler-extensions" }
build-local-plugin-enum = { module = "team.duckie.app.android.local:local-enums", version.ref = "plugin-local-master" }

kotlin-core = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin-core" }
kotlin-dokka-base = { module = "org.jetbrains.dokka:dokka-base", version.ref = "kotlin-dokka" }
kotlin-dokka-plugin = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "kotlin-dokka" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlin-collections-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlin-collections-immutable" }

apache-commons-io = { module = "commons-io:commons-io", version.ref = "apache-commons-io" }

androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-lifecycle-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "androidx-lifecycle-savedstate" }
androidx-splash = { module = "androidx.core:core-splashscreen", version.ref = "androidx-splash" }
androidx-datastore = { module = "androidx.datastore:datastore-preferences", version.ref = "androidx-datastore" }
androidx-room-core = { module = "androidx.room:room-ktx", version.ref = "androidx-room" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "androidx-room" }
androidx-profile-installer = { module = "androidx.profileinstaller:profileinstaller", version.ref = "androidx-profile-installer" }
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidx-annotation" }

compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "compose-runtime" }
compose-ui-coil = { module = "io.coil-kt:coil-compose", version.ref = "compose-coil" }
compose-ui-coil-gif = { module = "io.coil-kt:coil-gif", version.ref = "compose-coil" }
compose-ui-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose-foundation" }
compose-ui-activity = { module = "androidx.activity:activity-compose", version.ref = "compose-activity" }
compose-ui-material = { module = "androidx.compose.material:material", version.ref = "compose-material" }
compose-ui-lottie = { module = "com.airbnb.android:lottie-compose", version.ref = "compose-lottie" }
compose-ui-camposer = { module = "io.github.ujizin:camposer", version.ref = "compose-camposer" }
compose-ui-accompanist-flowlayout = { module = "com.google.accompanist:accompanist-flowlayout", version.ref = "compose-accompanist" }
compose-ui-accompanist-placeholder = { module = "com.google.accompanist:accompanist-placeholder", version.ref = "compose-accompanist" }
compose-ui-accompanist-webview = { module = "com.google.accompanist:accompanist-webview", version.ref = "compose-accompanist" }
compose-util-tooling-core = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-core" } # debugImplementation
compose-util-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose-core" }
compose-util-customview-pooling-container = { module = "androidx.customview:customview-poolingcontainer", version.ref = "compose-customview-pooling-container" } # debugImplementation
compose-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "compose-lifecycle" }
compose-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "compose-lifecycle" }

ktx-core = { module = "androidx.core:core-ktx", version.ref = "ktx-core" }
ktx-activiy = { module = "androidx.activity:activity-ktx", version.ref = "ktx-activity" }
ktx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "ktx-lifecycle" }
ktx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "ktx-lifecycle" }

paging-runtime = { module = "androidx.paging:paging-runtime", version.ref = "androidx-paging" }
paging-common = { module = "androidx.paging:paging-common", version.ref = "androidx-paging" }
paging-compose = { module = "androidx.paging:paging-compose", version.ref = "androidx-paging-compose" }

ui-oss-license = { module = "com.google.android.gms:play-services-oss-licenses", version.ref = "ui-oss-license" }
ui-system-controller = { module = "land.sungbin:systemuicontroller", version.ref = "ui-system-controller" }

exoplayer-core = { module = "com.google.android.exoplayer:exoplayer", version.ref = "exoplayer-core" }
exoplayer-ui = { module = "com.google.android.exoplayer:exoplayer-ui", version.ref = "exoplayer-core" }

analytics-leakcanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "analytics-leakcanary" }
analytics-anrwatchdog = { module = "com.github.anrwatchdog:anrwatchdog", version.ref = "analytics-anrwatchdog" }

firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase-bom" }
firebase-remote-config = { module = "com.google.firebase:firebase-config-ktx" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics-ktx" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx" }
firebase-performance = { module = "com.google.firebase:firebase-perf-ktx" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging-ktx" }

login-kakao = { module = "com.kakao.sdk:v2-user", version.ref = "login-kakao" }

di-hilt-core = { module = "com.google.dagger:hilt-android", version.ref = "di-hilt" }
di-hilt-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "di-hilt" }
di-inject = { module = "javax.inject:javax.inject", version.ref = "di-inject" }

ktor-jackson = { module = "io.ktor:ktor-serialization-jackson", version.ref = "ktor-core" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor-core" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor-core" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor-core" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor-core" }
ktor-client-engine = { module = "io.ktor:ktor-client-cio", version.ref = "ktor-core" }

fuel-core = { module = "com.github.kittinunf.fuel:fuel", version.ref = "fuel-core" }
fuel-moshi = { module = "com.github.kittinunf.fuel:fuel-moshi", version.ref = "fuel-core" }
fuel-coroutines = { module = "com.github.kittinunf.fuel:fuel-coroutines", version.ref = "fuel-core" }

jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson-core" }
jackson-annotation = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson-core" }

moshi-core = { module = "com.squareup.moshi:moshi", version.ref = "moshi-core" }
moshi-adapters = { module = "com.squareup.moshi:moshi-adapters", version.ref = "moshi-core" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi-core" }

orbit-viewmodel = { module = "org.orbit-mvi:orbit-viewmodel", version.ref = "orbit-core" }
orbit-compose = { module = "org.orbit-mvi:orbit-compose", version.ref = "orbit-core" }

quack-ui-components = { module = "team.duckie.quack:quack-ui-components", version.ref = "quack-ui-components" }
quack-lint-core = { module = "team.duckie.quack:quack-lint-core", version.ref = "quack-lint-core" }
quack-lint-quack = { module = "team.duckie.quack:quack-lint-quack", version.ref = "quack-lint-quack" }
quack-lint-compose = { module = "team.duckie.quack:quack-lint-compose", version.ref = "quack-lint-compose" }

test-strikt = { module = "io.strikt:strikt-core", version.ref = "test-strikt" }
test-junit-core = { module = "junit:junit", version.ref = "test-junit-core" }
test-junit-engine = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "test-junit-engine" } # testRuntimeOnly
test-androidx-junit = { module = "androidx.test.ext:junit-ktx", version.ref = "test-androidx-junit" }
test-androidx-runner = { module = "androidx.test:runner", version.ref = "test-androidx-runner" }
test-compose-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose-core" } # debugImplementation
test-compose-junit = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose-core" } # androidTestImplementation
test-parameter-injector = { module = "com.google.testparameterinjector:test-parameter-injector", version.ref = "test-parameter-injector" }
test-turbine = { module = "app.cash.turbine:turbine", version.ref = "test-turbine" }
test-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlin-coroutines" }
test-ktor-client = { module = "io.ktor:ktor-client-mock", version.ref = "ktor-core" }
test-ktor-server = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor-core" }
test-orbit = { module = "org.orbit-mvi:orbit-test", version.ref = "orbit-core" }

detekt-plugin-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "plugin-code-detekt" }

# Dependencies of the included build-logic
ksp-gradlePlugin = { group = "com.google.devtools.ksp", name = "com.google.devtools.ksp.gradle.plugin", version.ref = "plugin-kotlin-ksp" }

[bundles]
compose-core = ["compose-runtime", "compose-ui-foundation", "compose-ui-activity", "compose-util-tooling-preview"]
compose-debug = ["compose-util-tooling-core", "compose-util-customview-pooling-container"] # debugImplementation

ktor-client = ["ktor-jackson", "ktor-client-core", "ktor-client-content-negotiation", "ktor-client-logging", "ktor-client-engine"]
fuel = ["fuel-core", "fuel-moshi", "fuel-coroutines"]
moshi = ["moshi-core", "moshi-kotlin", "moshi-adapters"]

quack-lint = ["quack-lint-core", "quack-lint-quack", "quack-lint-compose"]
