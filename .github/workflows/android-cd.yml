# ref: https://dev.to/supersuman/build-and-sign-android-apps-using-github-actions-54j
name: Android CD

env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g -Dorg.gradle.daemon=false"
on:
  push:
    tags:
      # 플레이스토어 앱 배포 시
      - v*
      # 테스트 앱 배포 시
      # naming rule
      # test_ : stage 환경 test 배포 시
      # test_real_ : real 환경 test 배포 시
      - test_*

jobs:
  cd-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
#        with:
#          ref: refs/heads/develop
#          create-branch: true
#          token: ${{ secrets.DUCKIE_ADMINISTRATOR_GITHUB_TOKEN }}
#
#      # 버전 코드 올리기
#      - name: Set Config
#        run: |
#          git config --local user.email "${{ secrets.DUCKIE_ADMINISTRATOR_EMAIL }}"
#          git config --local user.name "${{ secrets.DUCKIE_ADMINISTRATOR_USER_NAME }}"
#
#      - name: Increase versionCode
#        run: |
#          # 특정 경로의 파일 내에서 특정 패턴이 포함된 라인의 숫자값을 가져옴
#          versionCode=$(grep 'const val versionCode =' ${{ secrets.DUCKIE_VERSION_CODE_RELATIVE_PATH }} | sed 's/[^0-9]*//g')
#
#          # 숫자로 바꾸고 1을 더한 값으로 업데이트
#          versionCode=$((versionCode + 1))
#
#          # sed를 사용하여 파일 내 해당 라인 업데이트
#          sed -i "s/const val versionCode = .*/const val versionCode = $versionCode/" ./${{ secrets.DUCKIE_VERSION_CODE_RELATIVE_PATH }}
#
#      - name: Commit changes
#        run: |
#          # 특정 경로의 파일 내에서 특정 패턴이 포함된 라인의 숫자값을 가져옴
#          versionCode=$(grep 'const val versionCode =' ${{ secrets.DUCKIE_VERSION_CODE_RELATIVE_PATH }} | sed 's/[^0-9]*//g')
#          git add .
#          git commit -m "veresionCode $versionCode 으로 올리기"
#
#      - name: Push changes
#        run: |
#          git push

      # android apk (추후 aab) 배포
      - name: Check deploy Type
        run: echo "isStage=${{ !startsWith(github.ref_name, 'test_real') && !startsWith(github.ref_name, 'v') }}" >> "$GITHUB_ENV"

      - name: Test env.isStage == 'true'
        if: ${{ env.isStage == 'true' }}
        run: echo ${{ env.isStage == 'true' }}

      - name: Test env.isStage == 'false'
        if: ${{ env.isStage == 'false' }}
        run: echo ${{ env.isStage == 'false' }}

      - name: Unarchive keystore signing files
        run: |
          gpg --quiet --batch --yes --always-trust --decrypt --passphrase=${{ secrets.DUCKIE_GPG_PASSWORD }} --output secrets.tar secrets.tar.gpg
          tar xvf secrets.tar

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1.0.6

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true

      - name: Setup MavenLocal
        run: ./gradlew :build-logic:local-enums:publishToMavenLocal

      # # TODO(riflockle7): aab 문제 있을 시 참고
      # - name: build and sign StandardRelease
      #   run: ./gradlew assembleStandardRelease

      - name: build and sign App (Stage)
        if: ${{ env.isStage == 'true' }}
        run: ./gradlew bundleStandardStageRelease

      - name: build and sign App (Real)
        if: ${{ env.isStage == 'false' }}
        run: ./gradlew bundleStandardRelease

      #      # TODO(riflockle7): Sign 과정이 필요해질 때 활성화
      #      - name: Sign AAB
      #        id: sign_aab
      #        uses: r0adkll/sign-android-release@v1
      #        with:
      #          releaseDirectory: app/build/outputs/bundle/standardRelease
      #          signingKeyBase64: ${{ secrets.DUCKIE_SIGNING_KEY_BASE_64 }}
      #          alias: ${{ secrets.DUCKIE_SIGNING_KEY_ALIAS }}
      #          keyStorePassword: ${{ secrets.DUCKIE_SIGNING_STORE_PASSWORD }}
      #          keyPassword: ${{ secrets.DUCKIE_SIGNING_KEY_PASSWORD }}
      #       # path: ${{ steps.sign_aab.outputs.signedReleaseFile }}

      - name: Upload artifact to Firebase App Distribution (Stage)
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        if: ${{ env.isStage == 'true' }}
        with:
          appId: ${{ secrets.DUCKIE_FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.DUCKIE_FIREBASE_CREDENTIAL_FILE_CONTENT }}
          groups: internal_testers
          file: app/build/outputs/bundle/standardStageRelease/app-standardStage-release.aab
          # app/build/outputs/apk/standard/stage/release/app-standard-stage-release.apk

      - name: Upload artifact to Firebase App Distribution (Real)
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        if: ${{ env.isStage == 'false' }}
        with:
          appId: ${{ secrets.DUCKIE_FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.DUCKIE_FIREBASE_CREDENTIAL_FILE_CONTENT }}
          groups: internal_testers
          file: app/build/outputs/bundle/standardRelease/app-standard-release.aab
          # app/build/outputs/apk/standard/release/app-standard-release.apk
