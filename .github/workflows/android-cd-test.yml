# ref: https://dev.to/supersuman/build-and-sign-android-apps-using-github-actions-54j
name: Android CD TEST

env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g -Dorg.gradle.daemon=false"
on:
  push:
    tags:
      - v*
      - github_action_test_*

jobs:
  cd-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: refs/heads/develop
          create-branch: true

      - name: Unarchive keystore signing files
        run: |
          gpg --quiet --batch --yes --always-trust --decrypt --passphrase=${{ secrets.SECRET_GPG_PASSWORD }} --output secrets.tar secrets.tar.gpg
          tar xvf secrets.tar

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1.0.6

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true

      # 임시로 보호 상태를 해제
      - name: Unprotect branch
        if: always()
        uses: actions/github-script@v5
        with:
          script: |
            const github = require("@actions/github");
            const octokit = new github.GitHub(${{ secrets.DUCKIE_ADMINISTRATOR_GITHUB_TOKEN }});
            octokit.repos.removeBranchProtection({
              owner: github.context.repo.owner,
              repo: github.context.repo.repo,
              branch: "develop",
            });

      - name: Set Config
        run: |
          git config --local user.email "ridickle7@gamil.com"
          git config --local user.name "ricky_0_k"

      - name: Increase versionCode
        run: |
          # 특정 경로의 파일 내에서 특정 패턴이 포함된 라인의 숫자값을 가져옴
          versionCode=$(grep 'const val versionCode =' ${{ secrets.DUCKIE_VERSION_CODE_RELATIVE_PATH }} | sed 's/[^0-9]*//g')

          # 숫자로 바꾸고 1을 더한 값으로 업데이트
          versionCode=$((versionCode + 1))

          # sed를 사용하여 파일 내 해당 라인 업데이트
          sed -i "s/const val versionCode = .*/const val versionCode = $versionCode/" ./${{ secrets.DUCKIE_VERSION_CODE_RELATIVE_PATH }}

      - name: Commit changes
        run: |
          # 특정 경로의 파일 내에서 특정 패턴이 포함된 라인의 숫자값을 가져옴
          versionCode=$(grep 'const val versionCode =' ${{ secrets.DUCKIE_VERSION_CODE_RELATIVE_PATH }} | sed 's/[^0-9]*//g')
          git add .
          git commit -m "veresionCode $versionCode 으로 올리기"

      - name: Push changes
        run: |
          git push --no-verify --force-with-lease

      # 원래 보호 상태를 복원
      - name: Protect branch
        if: always()
        uses: actions/github-script@v5
        with:
          script: |
            const github = require("@actions/github");
            const octokit = new github.GitHub(${{ secrets.DUCKIE_ADMINISTRATOR_GITHUB_TOKEN }});
            octokit.repos.updateBranchProtection({
              owner: github.context.repo.owner,
              repo: github.context.repo.repo,
              branch: "develop",
              required_pull_request_reviews: {
                required_approving_review_count: 1
              },
              required_status_checks: {
                contexts: ["ci-build"]
              },
              enforce_admins: true,
              restrictions: null
            });
